use crate::bitpanda::trade::{Asset, AssetClass, CryptoCurrency, Currency, Fiat, InOut};
use crate::database::TradeDatabase;
use crate::mock::bitpanda::TradeGenerator;

use chrono::DateTime;
use std::str::FromStr;

pub struct DatabaseTradeMock;

impl DatabaseTradeMock {
    pub fn mock() -> TradeDatabase {
        TradeDatabase::from(vec![
            TradeGenerator::deposit(
                DateTime::from_str("2021-01-06T12:32:24Z").unwrap(),
                dec!(10180.00),
                Fiat::Eur,
            ),
            TradeGenerator::buy(
                DateTime::from_str("2021-07-01T16:32:24Z").unwrap(),
                dec!(225.97),
                Fiat::Eur,
                dec!(1.0),
                Asset::Ticker(String::from("TSLA")),
                AssetClass::Stock,
                dec!(225.97),
            ),
            TradeGenerator::buy(
                DateTime::from_str("2021-07-01T16:32:24Z").unwrap(),
                dec!(514.25),
                Fiat::Eur,
                dec!(3.0),
                Asset::Ticker(String::from("AMZN")),
                AssetClass::Stock,
                dec!(171.65),
            ),
            TradeGenerator::buy(
                DateTime::from_str("2021-07-01T16:32:24Z").unwrap(),
                dec!(877.01),
                Fiat::Eur,
                dec!(1.5),
                Asset::Ticker(String::from("ADBE")),
                AssetClass::Stock,
                dec!(584.73),
            ),
            TradeGenerator::buy(
                DateTime::from_str("2021-07-01T16:32:24Z").unwrap(),
                dec!(454.75),
                Fiat::Eur,
                dec!(0.01354533),
                Asset::Currency(Currency::Crypto(CryptoCurrency::Btc)),
                AssetClass::Cryptocurrency,
                dec!(33572.12),
            ),
            TradeGenerator::buy(
                DateTime::from_str("2021-07-05T12:32:24Z").unwrap(),
                dec!(586.40),
                Fiat::Eur,
                dec!(80.0),
                Asset::HongKong(1177),
                AssetClass::Stock,
                dec!(7.33),
            ),
            TradeGenerator::sell(
                DateTime::from_str("2021-08-13T16:32:24Z").unwrap(),
                dec!(593.26),
                Fiat::Eur,
                dec!(0.01354533),
                Asset::Currency(Currency::Crypto(CryptoCurrency::Btc)),
                AssetClass::Cryptocurrency,
                dec!(43798.12),
            ),
            TradeGenerator::sell(
                DateTime::from_str("2021-08-16T16:32:24Z").unwrap(),
                dec!(334.50),
                Fiat::Eur,
                dec!(2.0),
                Asset::Ticker(String::from("AMZN")),
                AssetClass::Stock,
                dec!(167.25),
            ),
            TradeGenerator::deposit(
                DateTime::from_str("2021-08-20T12:32:24Z").unwrap(),
                dec!(1018.00),
                Fiat::Usd,
            ),
            TradeGenerator::buy(
                DateTime::from_str("2021-08-30T12:32:24Z").unwrap(),
                dec!(865.41),
                Fiat::Eur,
                dec!(3.0),
                Asset::Ticker(String::from("PYPL")),
                AssetClass::Stock,
                dec!(288.47),
            ),
            TradeGenerator::sell(
                DateTime::from_str("2021-09-22T16:32:24Z").unwrap(),
                dec!(313.04),
                Fiat::Eur,
                dec!(0.5),
                Asset::Ticker(String::from("ADBE")),
                AssetClass::Stock,
                dec!(626.08),
            ),
            TradeGenerator::withdrawal(
                DateTime::from_str("2021-09-24T12:32:24Z").unwrap(),
                dec!(500.00),
                Fiat::Eur,
            ),
            TradeGenerator::sell(
                DateTime::from_str("2021-12-10T12:32:24Z").unwrap(),
                dec!(565.53),
                Fiat::Eur,
                dec!(3.0),
                Asset::Ticker(String::from("PYPL")),
                AssetClass::Stock,
                dec!(188.51),
            ),
            TradeGenerator::buy(
                DateTime::from_str("2021-12-12T12:32:24Z").unwrap(),
                dec!(405.0),
                Fiat::Eur,
                dec!(300.0),
                Asset::Currency(Currency::Crypto(CryptoCurrency::Ada)),
                AssetClass::Cryptocurrency,
                dec!(1.35),
            ),
            TradeGenerator::transfer(
                // NOTE: staking
                DateTime::from_str("2021-12-12T12:32:24Z").unwrap(),
                InOut::Outgoing,
                dec!(270.0),
                Fiat::Eur,
                dec!(200.0),
                Asset::Currency(Currency::Crypto(CryptoCurrency::Ada)),
                AssetClass::Cryptocurrency,
                dec!(1.35),
            ),
        ])
    }

    pub fn google_stock_split_mock() -> TradeDatabase {
        TradeDatabase::from(vec![
            TradeGenerator::buy(
                DateTime::from_str("2022-07-02T12:32:24Z").unwrap(),
                dec!(60.01),
                Fiat::Eur,
                dec!(0.02863967),
                Asset::Ticker(String::from("GOOGL")),
                AssetClass::Stock,
                dec!(2095.35),
            ),
            TradeGenerator::buy(
                DateTime::from_str("2022-07-02T13:32:24Z").unwrap(),
                dec!(150.00),
                Fiat::Eur,
                dec!(0.07170714),
                Asset::Ticker(String::from("GOOGL")),
                AssetClass::Stock,
                dec!(2091.84),
            ),
            TradeGenerator::transfer(
                DateTime::from_str("2022-07-17T13:32:24Z").unwrap(),
                InOut::Incoming,
                dec!(4214.52),
                Fiat::Eur,
                dec!(1.90658939),
                Asset::Ticker(String::from("GOOGL")),
                AssetClass::Stock,
                dec!(2210.50),
            ),
            TradeGenerator::sell(
                DateTime::from_str("2022-08-02T13:32:24Z").unwrap(),
                dec!(112.82),
                Fiat::Eur,
                dec!(1.01894380),
                Asset::Ticker(String::from("GOOGL")),
                AssetClass::Stock,
                dec!(110.72),
            ),
            TradeGenerator::buy(
                DateTime::from_str("2022-08-02T13:32:24Z").unwrap(),
                dec!(1.34),
                Fiat::Eur,
                dec!(0.01210000),
                Asset::Ticker(String::from("GOOGL")),
                AssetClass::Stock,
                dec!(110.74),
            ),
            TradeGenerator::sell(
                DateTime::from_str("2022-08-08T13:32:24Z").unwrap(),
                dec!(81.39),
                Fiat::Eur,
                dec!(0.70360841),
                Asset::Ticker(String::from("GOOGL")),
                AssetClass::Stock,
                dec!(115.68),
            ),
            TradeGenerator::sell(
                DateTime::from_str("2022-08-08T13:32:24Z").unwrap(),
                dec!(34.30),
                Fiat::Eur,
                dec!(0.29648399),
                Asset::Ticker(String::from("GOOGL")),
                AssetClass::Stock,
                dec!(115.69),
            ),
        ])
    }
}
